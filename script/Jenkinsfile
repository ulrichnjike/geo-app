pipeline {
    agent any
    tools{
     maven 'M2_HOME'   
    }
    stages{
        stage('sonar-scan'){
            steps{
            withSonarQubeEnv('SonarQube'){
            sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ulrichnjike_geo-app'
            }        
            }
        }
        stage('clean'){
            steps{
            sh 'mvn clean'
            sh 'mvn validate'
            sh 'mvn compile'
            sh 'mvn install'
            sh 'mvn test'
            sh 'mvn package'
            }
        }
        stage('upload artifact'){
            steps{ 
            sh 'curl -uadmin:AP61gPKMyRw3x4zYyDNwh7D7yvQ -T \
            target/bio*.jar \
            "http://ec2-34-205-159-90.compute-1.amazonaws.com:8081/artifactory/geolocation/geo/bio_${BUILD_ID}.jar"'   
            }
        }
        stage('docker login'){
            steps{
                sh'aws ecr get-login-password --region us-east-1 |\
                 docker login --username AWS --password-stdin \
                 844201119545.dkr.ecr.us-east-1.amazonaws.com'
            }
        }
        stage('docker image build'){
            steps{
                sh'docker build -t my_docker_repo:v.${BUILD_ID} .'
            }
        }
        stage('image tagging'){
            steps{
                sh'docker tag my_docker_repo:latest \
                844201119545.dkr.ecr.us-east-1.amazonaws.com/my_docker_repo:latest'
                sh'docker tag my_docker_repo:latest \
                844201119545.dkr.ecr.us-east-1.amazonaws.com/my_docker_repo:v.${BUILD_ID}'
            }
        }
        stage('push image'){
            steps{
                sh'docker tag my_docker_repo:latest \
                844201119545.dkr.ecr.us-east-1.amazonaws.com/my_docker_repo:latest'
                sh'docker tag my_docker_repo:latest \
                844201119545.dkr.ecr.us-east-1.amazonaws.com/my_docker_repo:v.${BUILD_ID}'
            }
        }
    }
}